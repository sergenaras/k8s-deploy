- name: K8S Worker Deploybook
  hosts:
  - worker
  - master
  become: yes
  gather_facts: no
  vars_prompt:
    - name: k8s_version
      prompt: "Kubernetes version"
      default: latest
      private: no

  tasks:    
    # Swap yapılandırması
    - name: Sistem saat yapılandırması
      shell:
        cmd: hwclock --hctosys
    - name: Swap alanlarının kapatılması
      shell:
        cmd: swapoff -a
    - name: /etc/fstab içerisindeki swap tanımlarının önüne diyez ekler
      shell:
        cmd: sed -i 's/^\(.*swap\)/#\1/g' /etc/fstab

    # Tarih saat ayarları
    - name: Chrony kurulması
      apt: 
        name: chrony
        state: present
    - name: Chrony konfigürasyonunu yapılandırılması
      blockinfile:
        path: /etc/chrony/chrony.conf
        block: |
          server 0.tr.pool.ntp.org
          server 1.tr.pool.ntp.org
          server 2.tr.pool.ntp.org
          server 3.tr.pool.ntp.org
        state: present
    - name: Chrony servisinin yeniden başlatılması
      service:
        name: chronyd
        state: restarted
        enabled: yes
    - name: Timezone konfigürasyonu
      timezone:
        name: Europe/Istanbul

    # Tüm paketlerin güncellenmesi
    - name: Sistemdeki tüm paketlerin güncellenmesi
      apt:
        name: "*"
        state: latest
        update_cache: yes

    # Modül tanımlarının yapılması
    - name: overlay modülünün aktif edilmesi
      shell:
        cmd: modprobe overlay
    - name: br_netfilter modülünün aktifleştirilmesi    
      shell:
        cmd: modprobe br_netfilter
    - name: Modüllerin konfigürasyon dosyasına işlenmesi
      blockinfile:
        path: /etc/modules-load.d/k8s.conf
        block: |
          overlay
          br_netfilter
        state: present
        create: yes
    - name: Network kurallarının tanımlanması
      blockinfile:
        path: /etc/sysctl.d/k8s.conf
        block: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        state: present
        create: yes
    - name: Yapılan ayarların sisteme uygulanması
      shell:
        cmd: sysctl --system

    # Containerd kurulumnları
    - name: Containerd paket deposunun gpg keylerinin eklenmesi 
      shell:
        cmd: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker.gpg
    - name: Containerd paket depolarının eklenmesi
      shell:
        cmd: echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable" | sudo tee /etc/apt/sources.list.d/docker.list 
    - name: Paket depolarının güncellenmesi
      apt:
        update_cache: yes
    - name: Containerd kurulması
      apt:
        name: containerd.io
        state: latest
    - name: Sistemdeki deamonların yeniden başlatılması
      ansible.builtin.systemd:
        daemon_reload: true
    - name: Containerd servisini başlat ve yeniden başlatma sonrasında başlayacak şekilde konumlandır
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: true
    - name: Containerd konfigürasyon dizininin oluşturulması
      file:
        path: /etc/containerd
        owner: root
        group: root
        mode: "0755"
        state: directory
    - name: Containerd default konfigürasyonun dosyaya yazılması
      shell: 
        cmd: containerd config default | tee /etc/containerd/config.toml
    - name: 
      shell: 
        cmd: sed -i 's/            SystemdCgroup = false/            SystemdCgroup = true/' /etc/containerd/config.toml
    - name: Containerd servisinin yeniden başlatılması
      service:
        name: containerd
        state: restarted

    # Kubernetes bileşenlerinin kurulması
    - name: APT Update
      apt:
        update_cache: yes
    - name: Pre-required packages
      apt:
        pkg:
        - apt-transport-https
        - ca-certificates
        - curl
    - name: Kubernets paket deposunun gpg keylerinin eklenmesi 
      shell:
        cmd: curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
    - name: Kubernetes paket depolarının eklenmesi
      shell:
        cmd: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    - name: APT Update
      apt:
        update_cache: yes
    - name: Install kubelet
      apt:
        name: kubelet
        state: "{{k8s_version}}"
    - name: Install kubeadm
      apt:
        name: kubeadm
        state: "{{k8s_version}}"
    - name: Install kubectl
      apt:
        name: kubectl
        state: "{{k8s_version}}"
    - name: Hold kubelet
      dpkg_selections:
        name: kubelet
        selection: hold
    - name: Hold kubeadm
      dpkg_selections:
        name: kubeadm
        selection: hold
    - name: Hold kubectl
      dpkg_selections:
        name: kubectl
        selection: hold
    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes
    - name: Remove useless packages from the cache
      apt:
        autoclean: yes

